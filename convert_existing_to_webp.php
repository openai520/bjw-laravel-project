<?php
/**
 * Â∞ÜÁé∞ÊúâÁöÑJPEGÂõæÁâáËΩ¨Êç¢‰∏∫WebPÊ†ºÂºè
 * Áî®‰∫é‰øÆÂ§çÊâπÈáè‰∏ä‰º†Êú™Ê≠£Á°ÆËΩ¨Êç¢WebPÁöÑ‰∫ßÂìÅ
 */

require_once __DIR__ . '/vendor/autoload.php';

use Illuminate\Foundation\Application;
use App\Models\Product;
use App\Models\ProductImage;
use App\Services\ImageService;

// ÂêØÂä®LaravelÂ∫îÁî®
$app = require_once __DIR__ . '/bootstrap/app.php';
$kernel = $app->make(Illuminate\Contracts\Console\Kernel::class);
$kernel->bootstrap();

$imageService = new ImageService();

// ÈúÄË¶ÅËΩ¨Êç¢ÁöÑ‰∫ßÂìÅID
$productIds = [731, 733, 734];

echo "=== ÂºÄÂßãËΩ¨Êç¢Áé∞ÊúâJPEGÂõæÁâá‰∏∫WebPÊ†ºÂºè ===\n";

foreach ($productIds as $productId) {
    $product = Product::with('images')->find($productId);
    
    if (!$product) {
        echo "‰∫ßÂìÅID {$productId} Êú™ÊâæÂà∞\n";
        continue;
    }
    
    echo "\nÂ§ÑÁêÜ‰∫ßÂìÅID: {$productId} - {$product->name}\n";
    
    // ËΩ¨Êç¢‰∏ªÂõæÁâá
    if ($product->main_image_url && !str_ends_with($product->main_image_url, '.webp')) {
        echo "  ËΩ¨Êç¢‰∏ªÂõæÁâá: {$product->main_image_url}\n";
        
        $currentPath = str_replace('/storage/', 'storage/app/public/', $product->main_image_url);
        $fullPath = __DIR__ . '/' . $currentPath;
        
        if (file_exists($fullPath)) {
            try {
                // ‰ΩøÁî®ImageServiceÈáçÊñ∞‰ºòÂåñÁé∞ÊúâÂõæÁâá
                $newPath = $imageService->reoptimizeExistingImage(
                    $currentPath,
                    'products',
                    true,
                    'webp'
                );
                
                // Êõ¥Êñ∞‰∫ßÂìÅÁöÑ‰∏ªÂõæÁâáURL
                $product->main_image_url = '/storage/' . $newPath;
                $product->save();
                
                echo "    ‚úÖ ‰∏ªÂõæÁâáËΩ¨Êç¢ÊàêÂäü: /storage/{$newPath}\n";
                
                // Âà†Èô§ÊóßÁöÑJPEGÊñá‰ª∂
                if (file_exists($fullPath)) {
                    unlink($fullPath);
                    echo "    üóëÔ∏è Âà†Èô§ÊóßJPEGÊñá‰ª∂: {$fullPath}\n";
                }
                
            } catch (Exception $e) {
                echo "    ‚ùå ‰∏ªÂõæÁâáËΩ¨Êç¢Â§±Ë¥•: " . $e->getMessage() . "\n";
            }
        } else {
            echo "    ‚ö†Ô∏è ‰∏ªÂõæÁâáÊñá‰ª∂‰∏çÂ≠òÂú®: {$fullPath}\n";
        }
    } else {
        echo "  ‰∏ªÂõæÁâáÂ∑≤ÊòØWebPÊ†ºÂºèÊàñ‰∏çÂ≠òÂú®\n";
    }
    
    // ËΩ¨Êç¢ÂÖ≥ËÅîÂõæÁâá
    foreach ($product->images as $index => $image) {
        if (!str_ends_with($image->image_path, '.webp')) {
            echo "  ËΩ¨Êç¢ÂÖ≥ËÅîÂõæÁâá {$index}: {$image->image_path}\n";
            
            $currentPath = 'storage/app/public/' . $image->image_path;
            $fullPath = __DIR__ . '/' . $currentPath;
            
            if (file_exists($fullPath)) {
                try {
                    // ËΩ¨Êç¢‰∏ªÂõæÁâá
                    $newMainPath = $imageService->reoptimizeExistingImage(
                        $currentPath,
                        'products',
                        true,
                        'webp'
                    );
                    
                    // ËΩ¨Êç¢Áº©Áï•Âõæ
                    $newThumbnailPath = null;
                    if ($image->thumbnail_path) {
                        $thumbnailCurrentPath = 'storage/app/public/' . $image->thumbnail_path;
                        $thumbnailFullPath = __DIR__ . '/' . $thumbnailCurrentPath;
                        
                        if (file_exists($thumbnailFullPath)) {
                            $newThumbnailPath = $imageService->reoptimizeExistingImage(
                                $thumbnailCurrentPath,
                                'products',
                                false, // ‰∏çÈúÄË¶ÅÂÜçÂàõÂª∫Áº©Áï•Âõæ
                                'webp'
                            );
                            
                            // Âà†Èô§ÊóßÁöÑÁº©Áï•Âõæ
                            if (file_exists($thumbnailFullPath)) {
                                unlink($thumbnailFullPath);
                            }
                        }
                    }
                    
                    // Êõ¥Êñ∞Êï∞ÊçÆÂ∫ìËÆ∞ÂΩï
                    $image->image_path = $newMainPath;
                    if ($newThumbnailPath) {
                        $image->thumbnail_path = $newThumbnailPath;
                    }
                    $image->save();
                    
                    echo "    ‚úÖ ÂÖ≥ËÅîÂõæÁâáËΩ¨Êç¢ÊàêÂäü: {$newMainPath}\n";
                    if ($newThumbnailPath) {
                        echo "    ‚úÖ Áº©Áï•ÂõæËΩ¨Êç¢ÊàêÂäü: {$newThumbnailPath}\n";
                    }
                    
                    // Âà†Èô§ÊóßÁöÑ‰∏ªÂõæÁâá
                    if (file_exists($fullPath)) {
                        unlink($fullPath);
                        echo "    üóëÔ∏è Âà†Èô§ÊóßJPEGÊñá‰ª∂: {$fullPath}\n";
                    }
                    
                } catch (Exception $e) {
                    echo "    ‚ùå ÂÖ≥ËÅîÂõæÁâáËΩ¨Êç¢Â§±Ë¥•: " . $e->getMessage() . "\n";
                }
            } else {
                echo "    ‚ö†Ô∏è ÂÖ≥ËÅîÂõæÁâáÊñá‰ª∂‰∏çÂ≠òÂú®: {$fullPath}\n";
            }
        } else {
            echo "  ÂÖ≥ËÅîÂõæÁâá {$index} Â∑≤ÊòØWebPÊ†ºÂºè\n";
        }
    }
}

echo "\n=== WebPËΩ¨Êç¢ÂÆåÊàê ===\n";
echo "ËØ∑Ê£ÄÊü•ËΩ¨Êç¢ÁªìÊûú:\n";

foreach ($productIds as $productId) {
    $product = Product::find($productId);
    if ($product) {
        $extension = pathinfo($product->main_image_url, PATHINFO_EXTENSION);
        echo "‰∫ßÂìÅID {$productId}: {$product->main_image_url} (Ê†ºÂºè: {$extension})\n";
    }
} 