<?php

/**
 * ËΩ¨Êç¢ÁâπÂÆö‰∫ßÂìÅÁöÑJPEGÂõæÁâá‰∏∫WebPÊ†ºÂºè
 * ‰∏ìÈó®Â§ÑÁêÜ‰∫ßÂìÅ733Âíå734
 */

require_once __DIR__.'/vendor/autoload.php';

use App\Models\Product;
use App\Services\ImageService;
use Illuminate\Support\Facades\Storage;

// ÂêØÂä®LaravelÂ∫îÁî®
$app = require_once __DIR__.'/bootstrap/app.php';
$kernel = $app->make(Illuminate\Contracts\Console\Kernel::class);
$kernel->bootstrap();

$imageService = new ImageService;

// ÈúÄË¶ÅËΩ¨Êç¢ÁöÑ‰∫ßÂìÅID
$productIds = [733, 734];

echo "=== ÂºÄÂßãËΩ¨Êç¢ÊåáÂÆö‰∫ßÂìÅÁöÑJPEGÂõæÁâá‰∏∫WebPÊ†ºÂºè ===\n";

foreach ($productIds as $productId) {
    $product = Product::with('images')->find($productId);

    if (! $product) {
        echo "‰∫ßÂìÅID {$productId} Êú™ÊâæÂà∞\n";

        continue;
    }

    echo "\nÂ§ÑÁêÜ‰∫ßÂìÅID: {$productId} - {$product->name}\n";

    // ËΩ¨Êç¢ÂÖ≥ËÅîÂõæÁâá
    foreach ($product->images as $index => $image) {
        if (! str_ends_with($image->image_path, '.webp')) {
            echo "  ËΩ¨Êç¢ÂÖ≥ËÅîÂõæÁâá {$index}: {$image->image_path}\n";

            $mainImageFullPath = Storage::disk('public')->path($image->image_path);

            if (file_exists($mainImageFullPath)) {
                try {
                    // ‰ΩøÁî®‰∏¥Êó∂Êñá‰ª∂ÂêçÂàõÂª∫UploadedFileÂØπË±°
                    $tempFileName = basename($image->image_path);
                    $uploadedFile = new \Illuminate\Http\UploadedFile(
                        $mainImageFullPath,
                        $tempFileName,
                        mime_content_type($mainImageFullPath),
                        null,
                        true // test mode
                    );

                    // ‰ΩøÁî®ImageServiceËΩ¨Êç¢ÂõæÁâá
                    $imagePaths = $imageService->saveOptimizedImage(
                        $uploadedFile,
                        'products',
                        true, // ÂàõÂª∫Áº©Áï•Âõæ
                        true, // Ë∞ÉÊï¥Â∞∫ÂØ∏
                        'webp' // ËΩ¨Êç¢‰∏∫WebPÊ†ºÂºè
                    );

                    if (isset($imagePaths['main']) && isset($imagePaths['thumbnail'])) {
                        // Âà†Èô§ÊóßÁöÑJPEGÊñá‰ª∂
                        if (Storage::disk('public')->exists($image->image_path)) {
                            Storage::disk('public')->delete($image->image_path);
                            echo "    üóëÔ∏è Âà†Èô§ÊóßJPEG‰∏ªÂõæ: {$image->image_path}\n";
                        }

                        if ($image->thumbnail_path && Storage::disk('public')->exists($image->thumbnail_path)) {
                            Storage::disk('public')->delete($image->thumbnail_path);
                            echo "    üóëÔ∏è Âà†Èô§ÊóßJPEGÁº©Áï•Âõæ: {$image->thumbnail_path}\n";
                        }

                        // Êõ¥Êñ∞Êï∞ÊçÆÂ∫ìËÆ∞ÂΩï
                        $image->image_path = $imagePaths['main'];
                        $image->thumbnail_path = $imagePaths['thumbnail'];
                        $image->save();

                        echo "    ‚úÖ ‰∏ªÂõæËΩ¨Êç¢ÊàêÂäü: {$imagePaths['main']}\n";
                        echo "    ‚úÖ Áº©Áï•ÂõæËΩ¨Êç¢ÊàêÂäü: {$imagePaths['thumbnail']}\n";
                    } else {
                        echo "    ‚ùå ImageServiceËΩ¨Êç¢Â§±Ë¥•ÔºåËøîÂõûË∑ØÂæÑÊó†Êïà\n";
                    }

                } catch (Exception $e) {
                    echo '    ‚ùå ÂÖ≥ËÅîÂõæÁâáËΩ¨Êç¢Â§±Ë¥•: '.$e->getMessage()."\n";
                }
            } else {
                echo "    ‚ö†Ô∏è ÂÖ≥ËÅîÂõæÁâáÊñá‰ª∂‰∏çÂ≠òÂú®: {$mainImageFullPath}\n";
            }
        } else {
            echo "  ÂÖ≥ËÅîÂõæÁâá {$index} Â∑≤ÊòØWebPÊ†ºÂºè\n";
        }
    }
}

echo "\n=== WebPËΩ¨Êç¢ÂÆåÊàê ===\n";
echo "Ê£ÄÊü•ËΩ¨Êç¢ÁªìÊûú:\n";

foreach ($productIds as $productId) {
    $product = Product::with('images')->find($productId);
    if ($product) {
        echo "‰∫ßÂìÅID {$productId} - {$product->name}:\n";
        foreach ($product->images as $index => $image) {
            $extension = pathinfo($image->image_path, PATHINFO_EXTENSION);
            echo "  ÂõæÁâá{$index}: {$image->image_path} (Ê†ºÂºè: {$extension})\n";
        }
    }
}
